<template>

<view>
     已经添加条目
     <checkbox-group bindchange="checkboxChange">
        <!-- http://blog.csdn.net/wangshop_11/article/details/54236745 -->
        <label class="checkbox" style="display:flex;" wx:for="{{checkitems}}"  wx:for-item="checkitem"  wx:key="{{checkitem.name}}">
            <checkbox value="{{checkitem.name}}" checked="{{checkitem.checked}}">{{checkitem.value}}</checkbox>
        </label>
      </checkbox-group>
</view>    

<view class="section">
  <input placeholder="输入一条计划购物项" maxlength="20"  component-id="newitem" value="{{newitemValue}}" bindinput='bindInput' auto-focus/>
  <button type="primary" size="{{primarySize}}" loading="{{loading}}" plain="{{plain}}" lang="zh_CN"
        disabled="{{disabled}}" bindtap="addnewitem" hover-class="other-button-hover"> 点击添加 </button>
</view>

<wxc-toast
    is-show="{{$toast.show}}"
    text="请多少填些内容，谢谢"
    icon="no"
    icon-color="#ff5777"
    ></wxc-toast>
</template>
<script>
export default{
    config: {
        usingComponents: {
            'wxc-toast':'@minui/wxc-toast'
        }
    },

    data: {
        //button setting
        defaultSize: 'default',
        primarySize: 'default',
        warnSize: 'default',
        disabled: false,
        plain: false,
        loading: false,

        $toast: {
            show: false
        },

        newitemValue:'',

        checkitems: []
    },

    methods:{
       
        checkboxChange: function(e) {
            //console.log('checkbox changed，new value：', e.detail.value)
        },

        bindInput:function(e){
           this.data.newitemValue = e.detail.value
        },

        addnewitem:function(e){
            let newitem = this.data.newitemValue
            if(!newitem){
                //console.log('Nothing')
                this.setData({
                    $toast: {
                            show: true
                        }
                    })

                setTimeout(() => {
                    this.setData({
                    $toast: {
                        show: false
                    }
                    })
                }, 1500)

            }
            else{
                let index = this.data.checkitems?(this.data.checkitems.length + 1):1
                let newitems =  this.data.checkitems?this.data.checkitems:[]
                newitems.push({name:'si'+ index, value:newitem})
                this.setData({checkitems:newitems})
                this.setData({newitemValue:''})
            }
        }
    }
}
</script>

<style>
.button-hover {
  background-color: red;
}
/** 添加自定义button点击态样式类**/
.other-button-hover {
  background-color: blue;
}
</style>